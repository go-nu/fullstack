
<div class="card m-2" id="comments-new">
    <div class="card-body">
        <!--            댓글 작성폼-->
        <form>
            <!--                닉네임입력-->
            <div class="mb-3">
                <label class="form-label">닉네임</label>
                <input type="text" class="form-control form-control-sm"
                       id="new-comment-nickname">
            </div>
            <!--                댓글본문입력-->
            <div class="mb-3">
                <label class="form-label">댓글 내용</label>
                <textarea type="text" class="form-control form-control-sm"
                          id="new-comment-body" rows="3"> </textarea>
            </div>
            <!-- 히든 인풋 -->
            <!-- 댓글은 게시글에 포함되어야하니까 article_id의 값을 hidden로 가지고 있어야한다. -->
            {{#article}}
                <input type="hidden" id="new-comment-article-id" value="{{id}}">
            {{/article}}
            <!--                전송버튼-->
            <button type="button" class="btn btn-outline-primary btn-m"
                    id="comment-create-btn">댓글작성 </button>
        </form>
    </div>
</div>
<script>
 {
 //댓글 작성 버튼 변수화(id가 comment-create-btn인 대상)
const commentCreateBtn = document.querySelector("#comment-create-btn");
commentCreateBtn.addEventListener("click",function(){
    console.log("버튼이 클릭되었습니다.");
//새댓글 객체 생성
const comment = {
    nickname: document.querySelector("#new-comment-nickname").value,
    body: document.querySelector("#new-comment-body").value,
    article_id: document.querySelector("#new-comment-article-id").value
}
// 댓글 객체 출력
  console.log(comment);

// fetch(url, 옵션) http요청을 보내기 위한 api입니다. - 서버로 부터 데이터를 가져올수 잇다.
const url = "/api/articles/"+comment.article_id+"/comments";
    fetch(url,{
        method : "post",
        body:JSON.stringify(comment), // comment JS 객체를 JSON으로 변경
        headers:{
            "Content-Type": "application/json"
        }
    }).then(response =>{
    //http 응답코드에 따른 메세지출력
    const msg = (response.ok) ? "댓글이 등록되었습니다.": "댓글 등록 실패!!";
    alert(msg);

    //현재 페이지 를 새로고침
    window.location.reload();

    });


});


 }


</script>
